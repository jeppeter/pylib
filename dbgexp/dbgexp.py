#! python

import sys
import inspect


ERROR_INFO_BASE_CAN_NOT_GET_DATA=0x80000001
ERROR_INFO_BASE_CAN_NOT_READ_CONFIG=0x80000002
ERROR_INFO_BASE_PERM_DENIED=0x80000003
ERROR_INFO_BASE_CONFIG_INVALID=0x80000004


ERROR_CHKSN_INVALID_SN=0x80000101
ERROR_CHKSN_NO_EXEC_CHECK=0x80000102

ERROR_IPCONF_CAN_NOT_GET_DATA=0x80000201
ERROR_IPCONF_NO_NETWORK=0x80000202
ERROR_IPCONF_INVALID_DATA=0x80000203
ERROR_IPCONF_ENABLE_FAILED=0x80000204
ERROR_IPCONF_PERM_DENIED=0x80000205


ERROR_AUTOHALT_PERM_DENIED=0x80000301
ERROR_AUTOHALT_NO_CONFIG=0x80000302
ERROR_AUTOHALT_INVALID_DATA=0x80000303

ERROR_UPDATE_PERM_DENIED=0x80000401
ERROR_UPDATE_NO_CONFIG=0x80000402
ERROR_UPDATE_NO_ENVIRONMENT=0x80000403
ERROR_UPDATE_NO_DOWNLOAD=0x80000404
ERROR_UPDATE_NO_UPDATE_PKG=0x80000405
ERROR_UPDATE_NO_PROCESS_DOWNLOAD=0x80000406
ERROR_UPDATE_DENIED_STOP_DOWNLOAD=0x80000407
ERROR_UPDATE_NO_PROCESS_UPDATE=0x80000408
ERROR_UPDATE_DENIED_STOP_UPDATE=0x80000409
ERROR_UPDATE_INVALID_DATA=0x80000409

ERROR_USBLS_PERM_DENIED=0x80000501
ERROR_USBLS_MOUNT_ERROR=0x80000502
ERROR_USBLS_NO_IMG_FOUND=0x80000503
ERROR_USBLS_NO_BACKWARD_UPDATE=0x80000504

ERROR_USBUPDATE_PERM_DENIED=0x80000601
ERROR_USBUPDATE_MOUNT_ERROR=0x80000602
ERROR_USBUPDATE_NO_IMG_FOUND=0x80000603
ERROR_USBUPDATE_NO_BACKWARD_UPDATE=0x80000604

ERROR_DISK_INFO_PERM_DENIED=0x80000701
ERROR_DISK_INFO_CONFIG_ERROR=0x80000702
ERROR_DISK_INFO_NO_DISK_INFO=0x80000703
ERROR_DISK_INFO_DISK_INFO_INVL=0x80000704

ERROR_DISK_CREATE_ERROR=0x80000705
ERROR_DISK_CREATE_ALREADY=0x80000706

ERROR_DISK_DELETE_NO_DISK=0x80000707
ERROR_DISK_DELETE_IN_USE=0x80000708

ERROR_DISK_SRC_INVL=0x80000709
ERROR_DISK_DST_INVL=0x8000070a
ERROR_DISK_SRC_INVL_SIZE=0x8000070b
ERROR_DISK_VM_STOP_ERROR=0x8000070c

ERROR_DISK_DST_NOT_SIZE_ENOUGH=0x8000070d
ERROR_DISK_USBLS_NOT_FOUND=0x8000070e

ERROR_NOT_VALID_LOCATION        =0x80000801
ERROR_RUN_CMD                   =0x80000802
ERROR_RUN_PIPE                  =0x80000803
ERROR_LOCATION_NOT_PAIR         =0x80000804

class DebugException(Exception):
	def __ResetVar(self):
		self.__code = 0
		return 
	def __init__(self,code,msg):
		self.__ResetVar()
		t,v,tb = sys.exc_info()
		if isinstance(v,DebugException) or issubclass(v.__class__,DebugException):
			super(Exception,self).__init__(v.Msg())
			self.__code = code
			self.__msg = v.Msg()
		else:
			_f = inspect.stack()[1]		
			_msg = '%s:%s (%s)(%s)'%(_f[1],_f[2],sys.exc_info(),msg)
			super(Exception,self).__init__(_msg)
			self.__code = code
			self.__msg = _msg
	def Msg(self):
		return self.__msg
	def Code(self):
		return self.__code
	def __str__(self):
		return 'error<0x%x> msg<%s>'%(self.__code,self.__msg)

